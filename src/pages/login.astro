---
import Base from '../layouts/Base.astro';
---

<Base title="تسجيل الدخول">
  <h1 style="text-align:center;margin-top:2rem;">تسجيل الدخول</h1>

  <div style="display:flex;flex-direction:column;gap:12px;align-items:center;margin-top:1.5rem;">
    <button id="googleBtn" style="padding:.7rem 1.2rem;border-radius:.6rem;">المتابعة مع Google</button>

    <div style="width:320px;max-width:90%;margin-top:1rem;">
      <label style="display:block;margin:.25rem 0;">البريد الإلكتروني</label>
      <input id="email" type="email" placeholder="you@example.com" style="width:100%;padding:.6rem;border-radius:.5rem;" />
      <label style="display:block;margin:.5rem 0 .25rem;">كلمة المرور</label>
      <input id="password" type="password" placeholder="••••••••" style="width:100%;padding:.6rem;border-radius:.5rem;" />

      <div style="display:flex;gap:8px;margin-top:.8rem;">
        <button id="emailLogin" style="padding:.5rem 1rem;border-radius:.5rem;">دخول بالبريد</button>
        <button id="emailRegister" style="padding:.5rem 1rem;border-radius:.5rem;">تسجيل حساب</button>
      </div>
    </div>

    <button id="logoutBtn" style="padding:.5rem 1rem;border-radius:.5rem;margin-top:1rem;">تسجيل الخروج</button>

    <p id="msg" style="margin-top:.5rem;color:#bbb;text-align:center;"></p>
  </div>

  <script type="module">
    import { auth, googleProvider } from '../../lib/firebase.js';
    import {
      signInWithPopup,
      GoogleAuthProvider,
      signInWithEmailAndPassword,
      createUserWithEmailAndPassword,
      signOut,
      onAuthStateChanged,
    } from 'firebase/auth';

    const $ = (sel) => document.querySelector(sel);
    const googleBtn = $('#googleBtn');
    const emailLogin = $('#emailLogin');
    const emailRegister = $('#emailRegister');
    const logoutBtn = $('#logoutBtn');
    const email = $('#email');
    const password = $('#password');
    const msg = $('#msg');

    const show = (t) => { msg.textContent = t || ''; };

    googleBtn?.addEventListener('click', async () => {
      show('جاري تسجيل الدخول...');
      try {
        await signInWithPopup(auth, googleProvider);
        show('تم تسجيل الدخول بنجاح ✅');
      } catch (e) {
        if (e.code === 'auth/operation-not-allowed') {
          show('مزود Google غير مُفعل في Firebase.');
        } else if (e.code === 'auth/unauthorized-domain') {
          show('يجب إضافة نطاق Vercel إلى Authorized Domains في Firebase.');
        } else {
          show('خطأ: ' + (e.message || e.code));
        }
        console.error(e);
      }
    });

    emailLogin?.addEventListener('click', async () => {
      show('...');
      try {
        await signInWithEmailAndPassword(auth, email.value.trim(), password.value);
        show('تم تسجيل الدخول ✅');
      } catch (e) {
        if (e.code === 'auth/user-not-found') show('لا يوجد حساب بهذا البريد.');
        else if (e.code === 'auth/wrong-password') show('كلمة المرور غير صحيحة.');
        else if (e.code === 'auth/invalid-email') show('بريد إلكتروني غير صالح.');
        else show('خطأ: ' + (e.message || e.code));
        console.error(e);
      }
    });

    emailRegister?.addEventListener('click', async () => {
      show('...');
      try {
        await createUserWithEmailAndPassword(auth, email.value.trim(), password.value);
        show('تم إنشاء الحساب وتسجيل الدخول ✅');
      } catch (e) {
        if (e.code === 'auth/email-already-in-use') show('البريد مستخدم بالفعل.');
        else if (e.code === 'auth/weak-password') show('كلمة المرور ضعيفة.');
        else show('خطأ: ' + (e.message || e.code));
        console.error(e);
      }
    });

    logoutBtn?.addEventListener('click', async () => {
      await signOut(auth);
      show('تم تسجيل الخروج.');
    });

    onAuthStateChanged(auth, (user) => {
      if (user) {
        show('مسجّل دخول: ' + (user.email || user.displayName || 'مستخدم'));
      } else {
        show('');
      }
    });
  </script>
</Base>
