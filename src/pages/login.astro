---
import Base from '../layouts/Base.astro';

// Grab the PUBLIC_* vars on the server (they ARE available here)
const cfg = {
  apiKey: import.meta.env.PUBLIC_FIREBASE_API_KEY,
  authDomain: import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: import.meta.env.PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: import.meta.env.PUBLIC_FIREBASE_STORAGE_BUCKET,
  appId: import.meta.env.PUBLIC_FIREBASE_APP_ID,
};
---

<Base title="تسجيل الدخول">
  <h1 style="text-align:center;margin:1rem 0;">تسجيل الدخول</h1>

  <p id="msg" style="text-align:center;min-height:1.2rem;"></p>

  <div style="display:flex;flex-direction:column;align-items:center;gap:.75rem">
    <button id="googleBtn" class="btn">المتابعة مع Google</button>

    <input id="email" type="email" placeholder="البريد الإلكتروني"
           style="padding:.6rem .8rem;border-radius:.5rem;width:260px;">
    <input id="password" type="password" placeholder="كلمة المرور"
           style="padding:.6rem .8rem;border-radius:.5rem;width:260px;">

    <div style="display:flex;gap:.5rem;flex-wrap:wrap;justify-content:center">
      <button id="emailLogin" class="btn">تسجيل الدخول</button>
      <button id="emailRegister" class="btn">إنشاء حساب</button>
      <button id="logoutBtn" class="btn">تسجيل الخروج</button>
    </div>
  </div>

  <style>
    .btn{ padding:.6rem 1rem;border-radius:.5rem;cursor:pointer;border:1px solid #444;background:#222;color:#eee;
      transition: transform 120ms ease, filter 120ms ease; }
    .btn:active{ transform: scale(.98); filter: brightness(.95); }
    .btn:focus-visible{ outline:2px solid #8ab4f8; outline-offset:2px; }
  </style>

  <!-- Inject `cfg` into this script with define:vars so we don't use import.meta.env in the browser -->
  <script type="module" define:vars={{ cfg }}>
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js';
    import {
      getAuth,
      GoogleAuthProvider,
      signInWithPopup,
      signInWithEmailAndPassword,
      createUserWithEmailAndPassword,
      signOut,
      onAuthStateChanged
    } from 'https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js';

    // `cfg` is injected by Astro (from the server) — safe & already filled
    const app = initializeApp(cfg);
    const auth = getAuth(app);
    const provider = new GoogleAuthProvider();

    const $ = (s) => document.querySelector(s);
    const googleBtn     = $('#googleBtn');
    const emailLogin    = $('#emailLogin');
    const emailRegister = $('#emailRegister');
    const logoutBtn     = $('#logoutBtn');
    const email         = $('#email');
    const password      = $('#password');
    const msg           = $('#msg');
    const show = (t='') => { if (msg) msg.textContent = t; };

    googleBtn?.addEventListener('click', async () => {
      show('جاري تسجيل الدخول…');
      try {
        await signInWithPopup(auth, provider);
        show('تم تسجيل الدخول بنجاح ✅');
      } catch (e) {
        show('خطأ: ' + (e?.message || e?.code || ''));
        console.error(e);
      }
    });

    emailLogin?.addEventListener('click', async () => {
      show('…');
      try {
        await signInWithEmailAndPassword(auth, email.value.trim(), password.value);
        show('تم تسجيل الدخول ✅');
      } catch (e) {
        show('خطأ: ' + (e?.message || e?.code || ''));
        console.error(e);
      }
    });

    emailRegister?.addEventListener('click', async () => {
      show('…');
      try {
        await createUserWithEmailAndPassword(auth, email.value.trim(), password.value);
        show('تم إنشاء الحساب وتسجيل الدخول ✅');
      } catch (e) {
        show('خطأ: ' + (e?.message || e?.code || ''));
        console.error(e);
      }
    });

    logoutBtn?.addEventListener('click', async () => {
      await signOut(auth);
      show('تم تسجيل الخروج.');
    });

    onAuthStateChanged(auth, (user) => {
      if (user) show('مسجّل دخول: ' + (user.email || user.displayName || 'مستخدم'));
      else show('');
    });
  </script>
</Base>
